@model IEnumerable<CPRG214.MVC.AssetTracking.Models.AssetViewModel>
@{
    var assetTypes = new SelectList(ViewBag.AssetTypes, "Id", "Name");
    ViewData["Title"] = "View Assets";
}

<div class="d-flex flex-column w-100">
    <div class="row justify-content-around m-0">
        <a class="btn btn-primary" href="@Url.Action("AddAsset", "Asset")">Add New Asset</a>
        <a class="btn btn-secondary" href="@Url.Action("AddAssetType", "AssetType")">Add New Asset Type</a>
    </div>

    <hr />
    <div>
        <dl class="row col-12 col-md-6">
            <dt class="col-6">Select Asset Type</dt>
            <dd class="col-6">
                <select id="AssetLookup" asp-items="assetTypes"></select>
            </dd>
        </dl>
    </div>

    @*Renders the view component with a model of 0.*@
    <div id="AssetDisplay">
        @await Component.InvokeAsync("AssetsByType", 0)
    </div>
</div>

@section Scripts {
    <script>
        //Adds event listener to element with Id "AssetLookup" when the document is ready.
        $(document).ready(FilterByType);

        function FilterByType() {
            $("#AssetLookup").change(function () {
                var assetTypeID = $("#AssetLookup").val();
                //When we change the AssetType ID, an AJAX request is sent to refresh the ViewComponent.
                $.ajax(
                    {
                        method: 'GET',
                        url: '/Asset/GetAssetsByType',
                        data: { id: assetTypeID }
                    }).done(function (result, statusText, xhdr) {
                        $("#AssetDisplay").html(result);
                    });//End Ajax
            }); //End "change" function
        }
    </script>
}

